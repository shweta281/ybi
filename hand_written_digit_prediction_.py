# -*- coding: utf-8 -*-
"""hand written digit prediction .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aFdZumNwaY8vpCSGpEIpZLDWzDhvOYrV

#  Title : Hand Written Digit Prediction


---

Objective: To build a system that can recognize numbers.

# Data Source
"""

from sklearn.datasets import load_digits

"""# Import Libraries"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""# Data Description"""

df=load_digits()

df.images

df.target

"""# Data Visualization"""

for i in range(10):
  _,axes=plt.subplots(nrows=1,ncols=1,figsize=(10,3))
  axes.set_axis_off()
  axes.imshow(df.images[i],cmap=plt.cm.gray_r,interpolation="nearest")
  axes.set_title(i)

"""# Data processing"""

df.images.shape

df.images[7]

df.images[0].shape

len(df.images)

samples=len(df.images)
data=df.images.reshape((samples,-1))

data[0]

data[0].shape

data.shape

"""# Scaling image data"""

data.min()

data.max()

data=data/16

data.min()

data.max()

data[0]

"""# Train test split data"""

from sklearn.model_selection import train_test_split

xtrain,xtest,ytrain,ytest=train_test_split(data,df.target,test_size=0.3)

xtrain.shape,xtest.shape,ytrain.shape,ytest.shape

"""# Random forest model"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier()

rf.fit(xtrain,ytrain)

"""# Predict test data"""

ypred=rf.predict(xtest)

ypred

"""# Accuracy"""

from sklearn.metrics import confusion_matrix,classification_report

confusion_matrix(ytest,ypred)

print(classification_report(ytest,ypred))

"""# explanation

The digits consist of 8x8 pixel image of digits. The image attribute of the dataset stores 8x8 arrays of grayscale value for each image. We can use these arrays to visualize numbers from 0 to 9 which is stored in target attribute of the dataset.
After reshaping the dataset we parse it to train test and split using sklearn library.
We classify the dataset ytrain using random forest model and test for its accuracy after prediction.
"""